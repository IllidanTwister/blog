<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mycookies.dao.TagMapper">
  <resultMap id="BaseResultMap" type="cn.mycookies.pojo.po.TagDO">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tag_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tag_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="cn.mycookies.pojo.dto.TagAddDTO">
    insert into tag (tag_name, tag_desc,type, create_time)
    values (#{tagName,jdbcType=VARCHAR}, #{tagDesc,jdbcType=VARCHAR},#{type},now())
  </insert>
  <insert id="insertSelective" parameterType="cn.mycookies.pojo.po.TagDO">
    insert into tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tagName != null">
        tag_name,
      </if>
      <if test="tagDesc != null">
        tag_desc,
      </if>
        create_time,
        update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tagName != null">
        #{tagName,jdbcType=VARCHAR},
      </if>
      <if test="tagDesc != null">
        #{tagDesc,jdbcType=VARCHAR},
      </if>
      now(),now()
    </trim>
  </insert>
  <select id="queryTagList" parameterType="cn.mycookies.pojo.po.TagDO" resultType="cn.mycookies.pojo.po.TagDO">
    SELECT id,tag_name as tagName, tag_desc as tagDesc,`type`,create_time as createTime,update_time as updateTime from tag
    <where>
      <if test="type != null">
        type = #{type}
      </if>
    </where>
  </select>

  <select id="queryByName" parameterType="cn.mycookies.pojo.dto.TagAddDTO" resultType="cn.mycookies.pojo.po.TagDO">
    SELECT id,tag_name as tagName, tag_desc as tagDesc,type,create_time as createTime,update_time as updateTime
    FROM tag
    <where>
    <if test="type != null">
      type = #{type}
    </if>
    <if test="tagName != null">
      and tag_name= #{tagName}
    </if>
    </where>
  </select>
  <select id="queryById" parameterType="cn.mycookies.pojo.po.TagDO" resultType="cn.mycookies.pojo.po.TagDO">
    SELECT id,tag_name as tagName, tag_desc as tagDesc,create_time as createTime,update_time as updateTime
    FROM tag
    <where>
      <if test="type != null">
        type = #{type}
      </if>
      <if test="id != null">
        and id= #{id}
      </if>
    </where>
  </select>
  <select id="queryTagBoList" resultType="cn.mycookies.pojo.vo.TagVO">
      SELECT
        COUNT(t.blog_id) count, t.tag_id as id, t2.tag_name as tagName
    FROM
        blog_tags t
            LEFT JOIN
        tag t2 ON t.tag_id = t2.id AND t2.type = 1
    GROUP BY t.tag_id;
  </select>
  <select id="queryTagsOfBlog" resultType="cn.mycookies.pojo.vo.TagVO">
    SELECT tag.tag_name as tagName ,tag.id
    FROM blog_tags
    LEFT JOIN tag on tag.id = blog_tags.tag_id and tag.type=1
    where blog_id = #{blogId}
  </select>
  <select id="queryCategoryVOList" resultType="cn.mycookies.pojo.vo.TagVO">
    SELECT
      COUNT(t.category_id) count, t.category_id as id, t2.tag_name as tagName
    FROM
      blog t

      LEFT JOIN
      tag t2 ON t.category_id = t2.id AND t2.type = 2
    GROUP BY t.category_id;
  </select>
  <update id="updateTag" parameterType="cn.mycookies.pojo.po.TagDO">
      UPDATE tag
    <set>
       <if test="tagName != null">
      tag_name=#{tagName,jdbcType=VARCHAR},
    </if>
      <if test="tagDesc != null">
        tag_desc=#{tagDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteById" parameterType="int">
    DELETE 
    FROM tag
    WHERE id=#{id,jdbcType=INTEGER} 
  </delete>
</mapper>